#define N 10
void reduction(ref int l1, ref int r1, ref int l2, ref int r2){
    int max = l1 > l2 ? l1 : l2;
    int min = r1 < r2 ? r1 : r2;

    if(max % 2 == 1 || (max % 2) == -1){
        l2 = max - 1;
    }
    else{
        l1 = max - 1;
    }
    if(min % 2 == 1 || (max % 2) == -1){
        r2 = min + 1;
    }
    else{
        r1 = min + 1;
    }
}


bit isOdd(int x){
    return x % 2 == 1 || x % 2 == -1;
}

bit isEven(int x){
    return x % 2 == 0;
}


bit gammaCheckSoundoddIntv(ref int left, ref int right, int c){
    assert (left % 2 != 0) && (right % 2 != 0);
    assert left <= right;
    return left <= c && c <= right;
}

bit gammaCheckSoundevenIntv(ref int left, ref int right, int c){
    assert (left % 2 == 0) && (right % 2 == 0);
    assert left <= right;
    return left <= c && c <= right;
}
